#!/bin/bash

echo " RFLAG register"
echo ""
echo "  63                                                                              32"
echo "  +--------------------------------------------------------------------------------+"
echo "  |                                  Rserved, RAZ                                  |"
echo "  +--------------------------------------------------------------------------------+"
echo ""
echo "  31             21  20  19 18 17 16 15 14 1312 11 10  9  8  7  6  5  4  3  2  1  0"
echo "  +--------------------------------------------------------------------------------+"
echo "  | Rserved,RAZ |ID|VIP|VIF|AC|VM|RF|0 |NT|IOPL|OF|DF|IF|TF|SF|ZF|0 |AF|0 |PF|1 |CF|"
echo "  +--------------------------------------------------------------------------------+"
echo "                 |   |   |   |  |  |    |   |    |  |  |  |  |  |     |     |     |-- carry flag"
echo "                 |   |   |   |  |  |    |   |    |  |  |  |  |  |     |     |-- parity flag"
echo "                 |   |   |   |  |  |    |   |    |  |  |  |  |  |     |-- auxiliary flag"
echo "                 |   |   |   |  |  |    |   |    |  |  |  |  |  |-- zero flag"
echo "                 |   |   |   |  |  |    |   |    |  |  |  |  |-- sign flag"
echo "                 |   |   |   |  |  |    |   |    |  |  |  |-- trap flag"
echo "                 |   |   |   |  |  |    |   |    |  |  |-- interrupt flag"
echo "                 |   |   |   |  |  |    |   |    |  |-- direction flag"
echo "                 |   |   |   |  |  |    |   |    |-- overflow flag"
echo "                 |   |   |   |  |  |    |   |-- I/O privilege level"
echo "                 |   |   |   |  |  |    |-- nested task"
echo "                 |   |   |   |  |  |-- resume flag"
echo "                 |   |   |   |  |-- virtual 8086 mode"
echo "                 |   |   |   |-- alignment check"
echo "                 |   |   |-- virtual interrupt flag"
echo "                 |   |-- virtual interrupt pending"
echo "                 |-- ID flag"
echo ""
echo " Bit 8: Software sets the TF bit to 1 to enable single-step mode during software"
echo "        debug. Clearing this bit to 0 disables single-step mode."
echo " Bit 9: Software sets the IF bit to 1 to enable maskable interrupts. Clearing this"
echo "        bit to 0 causes the processor to ignore maskable interrupts"
echo " Bits 13:12: The IOPL field specifies the privilege level required to execute I/O"
echo "             address-space instructions"
echo " Bit 14: IRET reads the NT bit to determine whether the current task is nested"
echo "         within another task. When NT is set to 1, the current task is nested"
echo "          within another task. When NT is cleared to 0, the current task is at"
echo "          the top level (not nested)"
echo " Bit 16: The RF bit, when set to 1, temporarily disables instruction breakpoint"
echo "         reporting to prevent repeated debug exceptions (#DB) from occurring."
echo "         This allows an instruction which had been inhibited by an instruction-breakpoint"
echo "         debug exception to be restarted by the debug exception handler."
echo " Bit 17: Software sets the VM bit to 1 to enable virtual-8086 mode."
echo "         Software clears the VM bit to 0 to disable virtual-8086 mode"
echo " Bit 18: Software enables automatic alignment checking by setting the"
echo "         AC bit to 1 when CR0.AM=1. Alignment checking can be disabled by clearing"
echo "         either AC or CR0.AM to 0. When automatic alignment checking is enabled and"
echo "         the current privilege-level (CPL) is 3 (least privileged), a memory reference"
echo "         to an unaligned operand causes an alignment-check exception (#AC)."
echo " Bit 19: The VIF bit is a virtual image of the RFLAGS.IF bit. It is enabled"
echo "         when either virtual-8086 mode extensions are enabled (CR4.VME=1) or protected-mode virtual"
echo "         interrupts are enabled (CR4.PVI=1), and the RFLAGS.IOPL field is less than 3. When enabled,"
echo "         instructions that ordinarily would modify the IF bit actually modify the VIF bit with no"
echo "         effect on the RFLAGS.IF bit."
echo " Bit 20: The VIP bit is provided as an extension to both virtual-8086 mode and protected mode."
echo "         It is used by system software to indicate that an external, maskable interrupt is"
echo "         pending (awaiting) execution by either a virtual-8086 mode or protected-mode interrupt-service"
echo "         routine. Software must enable virtual-8086 mode extensions (CR4.VME=1) or protectedmode"
echo "         virtual interrupts (CR4.PVI=1) before using VIP."



